#!/bin/ksh

############################## standard interface to /sw tools
# Input:
#   Environment variables
#     SW_BLDDIR    current directory (PWD) minus /autofs/na1_ stuff
#     SW_ENVFILE   file to be sourced which has alternate prog environment
#                     only to be used in special circumstances
#     SW_WORKDIR   work dir that local script can use
# Output:
#   Return code of 0=success or 1=failure   or 2=job submitted
#
# Notes:
#   If this script is called from swtest, then swtest requires 
#   SW_WORKDIR to be set.  Then swtest adds a unique path to what 
#   user gave swtest (action+timestamp+build) and provides this
#   script with a uniquely valued SW_WORKDIR.  swtest will
#   automatically remove this unique workspace when retest is done.
##################################################################

# exit 3 is a signal to the sw infrastructure that this template has not 
# been updated; please delete it when ready

if [ -z $SW_BLDDIR ]; then
  echo "Error: SW_BLDDIR not set!"
  exit 1
else
  cd $SW_BLDDIR
fi

if [ -z $SW_ENVFILE ]; then
  ### Set Environment (do not remove this line only change what is in between)
  . ${MODULESHOME}/init/ksh
  . ${SW_BLDDIR}/remodule
  ### End Environment (do not remove this line only change what is in between)
else
  . $SW_ENVFILE
fi

############################## app specific section
#  
set -o verbose
#clear out status file since re-testing
rm -f status

source retest_python

export PATH=${SW_BLDDIR}/bin:${PATH}

echo "Test which python:"
which python

source retest_setuptools
source retest_nose
source retest_cython
source retest_numpy
source retest_scipy
#source retest_scientificpython
source retest_matplotlib
#source retest_numexpr
#source retest_pytables
#source retest_astropy
#source retest_lxml
#source retest_pynio
source retest_mpi4py
source retest_h5py
source retest_simpy
source retest_docopt
source retest_pillow
source retest_scikitimage
source retest_pywavelets



cd ../

############################### if this far, return 0
exit 0
