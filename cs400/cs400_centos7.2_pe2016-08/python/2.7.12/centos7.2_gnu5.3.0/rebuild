#!/bin/bash

############################## standard interface to /sw tools
# Input:
#   Environment variables
#     SW_BLDDIR    current directory (PWD) minus /autofs/na1_ stuff
#     SW_ENVFILE   file to be sourced which has alternate prog environment
#                     only to be used in special circumstances
#     SW_WORKDIR   unique work dir that local script can use
# Output
#   Return code of 0=success or 1=failure 
##############################

if [ -z $SW_BLDDIR ]; then
  echo "Error: SW_BLDDIR not set!"
  exit 1
else
  cd $SW_BLDDIR
fi

if [ -z $SW_ENVFILE ]; then
  ### Set Environment (do not remove this line only change what is in between)
  . ${MODULESHOME}/init/ksh
  . ${SW_BLDDIR}/remodule
  ### End Environment (do not remove this line only change what is in between)
else
  . $SW_ENVFILE
fi

############################## app specific section
#  
set -o verbose
# clear out old installation to prevent potential libtool chmod 
# commands from failing when reinstalled by another person
rm -rf bin include doc share man etc libexec info lib

# clear out status file since re-making
rm -f status test.log

export LDFLAGS="-Wl,-rpath,${SW_BLDDIR}/lib,-rpath,${MKL_DIR}/lib/intel64"
echo $LDFLAGS

source rebuild_python

export PATH=${SW_BLDDIR}/bin:${PATH}

echo "Test which python:"
which python

source rebuild_setuptools
source rebuild_nose
source rebuild_cython
source rebuild_numpy
source rebuild_scipy
source rebuild_matplotlib
source rebuild_mpi4py
#;source rebuild_numexpr
#;source rebuild_pytables
#;source rebuild_astropy
#;source rebuild_lxml
#;source rebuild_h5py
source rebuild_simpy
source rebuild_docopt
#;source rebuild_pillow
#;source rebuild_scikitimage
#;source rebuild_pywavelets
# Add for dolfin
source rebuild_ply
source rebuild_fiat
source rebuild_ufl
source rebuild_ufc
source rebuild_dijitso
source rebuild_dolfin
############################### if this far, return 0
exit 0
